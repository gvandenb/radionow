
services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: app
    depends_on:
      es:
        condition: service_healthy
      db:
        condition: service_healthy
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=123
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/radionow3
      - SPRING_DATA_ELASTICSEARCH_CLUSTER-NODES=es:9200
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=123
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_ELASTICSEARCH_URIS=es:9200
    ports:
      - 8081:8081
  es:
    image: 'docker.elastic.co/elasticsearch/elasticsearch:7.17.10'
    container_name: es
    healthcheck:
      test: curl -s http://es:9200 >/dev/null || exit 1
      interval: 5s
      timeout: 5s
      retries: 20
    environment:
      - bootstrap.memory_lock=true
      - xpack.security.enabled=false
      - discovery.type=single-node
    ports:
      - 9200:9200
      - 9300:9300
  db:
    image: 'postgres:latest'
    container_name: db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=123
      - POSTGRES_DB=radionow3
    volumes:
      - ~/apps/postgres:/var/lib/postgresql/data
    ports:
      - 5432:5432
